name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - name: Build docker image
      shell: bash
      run: |
        sudo apt-get install build-essential curl git lib32stdc++-9-dev libc6-dev-i386 nodejs npm python3-dev python3-pip
        pip3 install colorama prompt-toolkit pygments
        git clone https://github.com/frida/frida.git
        cd frida
        make core-linux-x86_64
        mkdir -p frida-assets/debug
        find . -name frida-inject -exec file {} \+ | grep -v 'not stripped' | head -n 1 | cut -d ':' -f 1 | xargs cp -t frida-assets
        find . -name frida-gadget.so -exec file {} \+ | grep -v 'not stripped' | head -n 1 | cut -d ':' -f 1 | xargs cp -t frida-assets
        find . -name frida-gadget.so -exec file {} \+ | grep 'not stripped' | head -n 1 | cut -d ':' -f 1 | xargs cp -t frida-assets/debug
        tar czf frida-assets.tgz frida-assets
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v0.2
        release_name: Release v0.2
        body: |
          Keeping only the following bins
          * frida-inject as this isn't on the download page
          * frida-gadget.so
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/frida/frida-assets.tgz
        asset_name: frida-assets.tgz
        asset_content_type: application/gzip
